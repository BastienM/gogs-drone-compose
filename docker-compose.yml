version: '2'
services:
  proxy:
    image: traefik
    command: --web --docker --logLevel=DEBUG
    networks:
      - net-gateway
      - web-tier
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml

  gogs:
    image: gogs/gogs:0.11.19
    container_name: gogs
    networks:
      - db-tier
      - web-tier
      - ci-tier
    volumes:
      - /data"
    labels:
      - "traefik.frontend.rule=Host:gogs.internal.cloud"
      - "traefik.backend=gogs"
      - "traefik.web.protocol=http"
      - "traefik.web.port=3000"
      - "traefik.docker.network=web-tier"

  gogs-db:
    image: postgres:9.1
    container_name: gogs-database
    networks:
      - db-tier
    environment:
      - POSTGRES_USER=gogs
      - POSTGRES_PASSWORD=gogs
    volumes:
      - /var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  drone-server:
    image: drone/drone:0.7
    container_name: drone
    networks:
      - web-tier
      - ci-tier
    environment:
      - DRONE_SECRET=gogsdronecompose
      - DRONE_OPEN=true
      - DRONE_HOST=http://drone.internal.cloud
      - DRONE_GOGS=true
      - DRONE_GOGS_URL=http://gogs:3000
      - DEBUG=true
    volumes:
      - /var/lib/drone
    labels:
      - "traefik.frontend.rule=Host:drone.internal.cloud"
      - "traefik.backend=drone"
      - "traefik.web.protocol=http"
      - "traefik.web.port=8000"
      - "traefik.docker.network=web-tier"
    
  drone-agent:
    image: drone/drone:0.7
    command: agent
    networks:
      - ci-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=gogsdronecompose
    labels:
      - "traefik.enable=false"

networks:
  net-gateway:
    external:
      name: net-gateway
  web-tier:
    external:
      name: web-tier
  db-tier:
    external:
      name: db-tier
  ci-tier:
    external:
      name: ci-tier
